services:
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    environment:
      # KRaft Configuration
      CLUSTER_ID: i-eOYUFHTHKdlwzX99QSBw # You can generate a new UUID 'docker run --rm confluentinc/cp-kafka:7.5.0 kafka-storage random-uuid'
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'

      # Listener and Network Configuration
      # PLAINTEXT: For internal communication between containers (uses service name 'kafka')
      # OUTSIDE: For communication from your host machine (uses localhost)
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093,OUTSIDE://0.0.0.0:9094'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,OUTSIDE://localhost:9094'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,OUTSIDE:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'

      # General Kafka Configuration
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

    ports:
      - '9092:9092' # Used by other services within the network
      - '9094:9094' # Used to access Kafka from outside Docker (e.g., from your local machine)
    networks:
      - kafka-network

    # Healthcheck to ensure Kafka is ready
    healthcheck:
      test: ['CMD-SHELL', 'kafka-topics --bootstrap-server kafka:9092 --list > /dev/null || exit 1']
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.5.0
    container_name: control-center
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      # CONTROL_CENTER_ZOOKEEPER_CONNECT: '' # Not needed in KRaft mode
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1

    ports:
      - '9021:9021'
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
